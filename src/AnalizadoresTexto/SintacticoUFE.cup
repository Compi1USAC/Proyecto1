package Analizadores;

import java.util.*; 
import java_cup.runtime.Symbol;
import Interfaz.*;
import InstrHTML.*;

parser code
{:  
    /*public static LinkedList<AcepErr> TablaErr=new LinkedList<AcepErr>();*/

    public Panel resultado;

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        //lista_errores.add(new ErrorT(lexema, fila, columna,"sintactico" ,"Simbolo no esperado"));
        /*AcepErr datos =new AcepErr(lexema, "ERROR SINTACTICO" ,fila,columna,"Simbolo no esperado");
            TablaErr.add(datos);
            */
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico, Panic Mode !!!!!!! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

       /*AcepErr datos =new AcepErr(lexema, "ERROR SINTACTICO" ,fila,columna,"Simbolo no esperado Error Fatal");
                   TablaErr.add(datos);
                  */
        //lista_errores.add(new ErrorT(lexema, fila, columna,"sintactico" ,"Simbolo no esperado, Panic Mode"));
    }

    public void semantic(Symbol cur_token, String n) 
    {
        System.out.println("error semantico ");
    }

    public void semantic(String msg, Object obj) {}

:}

action code
{:

:}  


terminal String tCadena, tComponent, tReturn, tVar, tIgual, tPuntoComa, tLlaveC;
terminal String tLlaveA, tParA, tParC, tTrue, tFalse, tId, tCaracter, tEntero, tClassname;
terminal String tDoble, tComa, tSuma, tResta, tMult, tDiv, tPow, tMayorQ, tMenorQ;
terminal String tPanel, tX, tY, tHeight, tWidth, tColor, tBorder, tDiagonal, tIdEtq, tNumero;
    
non terminal DECLARACION, SENTS, LISTASENTS, ASIGNACION, REASIGNACION;
non terminal LISTASIGNACION, E, COMPONENTE, SENTCOMPONENTE, LSENTCOMPONENTE, RETURN, ATRIB;
non terminal LOPCIONRETURN, OPCIONRETURN, LISTACOMPN, COMPN, LISTACOMPNOVACIO;
non terminal PANEL, INICIO, SENTENCIAS, SNLINSTRUFEX, LINSTRUFEX, INSTRUFEX;
non terminal LISTAATRIBUTOS, ATRIBUTO, SNLISTAATRIBUTOS, SIONOLINSTRUFEX;
non terminal LISTAPANEL;

precedence left tSuma, tResta;
precedence left tMult, tDiv;
precedence left tPow;


start with INICIO;

INICIO ::= LISTASENTS;

LISTASENTS ::= LISTASENTS SENTENCIAS
            | SENTENCIAS
            | error tPuntoComa
            ;

SENTENCIAS ::= COMPONENTE
            | DECLARACION
            | REASIGNACION 
            ;

DECLARACION ::= tVar LISTASIGNACION tPuntoComa {: :}
            ;

LISTASIGNACION ::= LISTASIGNACION tComa ASIGNACION {: :}
                | ASIGNACION {: :}
                | 
                ;

ASIGNACION ::= tId tIgual E
            | tId
            ;

REASIGNACION ::= tId tIgual E tPuntoComa
              ;

COMPONENTE ::= tComponent tId tLlaveA LSENTCOMPONENTE tLlaveC
            ;

LSENTCOMPONENTE ::= LSENTCOMPONENTE SENTCOMPONENTE
                | SENTCOMPONENTE
                ;

SENTCOMPONENTE ::= DECLARACION
                | REASIGNACION 
                | RETURN
                ;

RETURN ::= tReturn LINSTRUFEX tParC tPuntoComa
        ;


SIONOLINSTRUFEX ::= LINSTRUFEX tMenorQ
                | tMenorQ
                ;

LINSTRUFEX ::= LINSTRUFEX INSTRUFEX
            | INSTRUFEX
            | error tMayorQ
            ;

INSTRUFEX ::= PANEL
            ;


PANEL ::= tMenorQ tPanel SNLISTAATRIBUTOS tMayorQ SIONOLINSTRUFEX tDiagonal tPanel tMayorQ 
        ;

SNLISTAATRIBUTOS ::= LISTAATRIBUTOS 
                |
                ;

LISTAATRIBUTOS ::= LISTAATRIBUTOS ATRIBUTO
                | ATRIBUTO
                | error tMayorQ
                ;

ATRIBUTO ::= tIdEtq tIgual E  
        | tX tIgual E          
        | tY tIgual E
        | tHeight tIgual E
        | tWidth tIgual E
        | tColor tIgual E 
        | tBorder tIgual E
        | tClassname tIgual E
        ;

E   ::=  E tSuma E
    | E tResta E
    | E tMult E
    | E tDiv E 
    | E tPow E
    | tId
    | tCadena 
    | tCaracter 
    | tEntero
    | tDoble
    | tTrue
    | tFalse
    | tParA E tParC
    | tLlaveA E tLlaveC  
    ;