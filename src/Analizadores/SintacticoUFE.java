
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package Analizadores;

import InstrHTML.Panel;
import java.util.*;
import java_cup.runtime.Symbol;
import Interfaz.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class SintacticoUFE extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return Symu.class;
}

  /** Default constructor. */
  @Deprecated
  public SintacticoUFE() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public SintacticoUFE(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public SintacticoUFE(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\006\000\002\002\004\000\002\024\006\000\002\023" +
    "\023\000\002\023\022\000\002\025\004\000\002\025\003" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\036\000\004\006\004\001\002\000\004\033\007\001" +
    "\002\000\004\002\006\001\002\000\004\002\001\001\002" +
    "\000\004\034\013\001\002\000\004\015\011\001\002\000" +
    "\004\011\012\001\002\000\004\002\000\001\002\000\004" +
    "\037\014\001\002\000\004\010\015\001\002\000\004\045" +
    "\016\001\002\000\004\040\017\001\002\000\004\010\020" +
    "\001\002\000\004\045\021\001\002\000\004\041\022\001" +
    "\002\000\004\010\023\001\002\000\004\004\024\001\002" +
    "\000\004\032\025\001\002\000\004\033\026\001\002\000" +
    "\006\034\013\043\036\001\002\000\004\033\031\001\002" +
    "\000\004\033\ufffc\001\002\000\006\034\013\043\033\001" +
    "\002\000\004\033\ufffd\001\002\000\004\034\034\001\002" +
    "\000\004\032\035\001\002\000\006\015\uffff\033\uffff\001" +
    "\002\000\004\034\037\001\002\000\004\032\040\001\002" +
    "\000\006\015\ufffe\033\ufffe\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\036\000\004\024\004\001\001\000\004\023\007\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\023\027\025\026\001\001\000\002\001\001\000" +
    "\004\023\031\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$SintacticoUFE$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$SintacticoUFE$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$SintacticoUFE$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  
    /*public static LinkedList<AcepErr> TablaErr=new LinkedList<AcepErr>();*/

    public Panel resultado;

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        //lista_errores.add(new ErrorT(lexema, fila, columna,"sintactico" ,"Simbolo no esperado"));
        /*AcepErr datos =new AcepErr(lexema, "ERROR SINTACTICO" ,fila,columna,"Simbolo no esperado");
            TablaErr.add(datos);
            */
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico, Panic Mode !!!!!!! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

       /*AcepErr datos =new AcepErr(lexema, "ERROR SINTACTICO" ,fila,columna,"Simbolo no esperado Error Fatal");
                   TablaErr.add(datos);
                  */
        //lista_errores.add(new ErrorT(lexema, fila, columna,"sintactico" ,"Simbolo no esperado, Panic Mode"));
    }

    public void semantic(Symbol cur_token, String n) 
    {
        System.out.println("error semantico ");
    }

    public void semantic(String msg, Object obj) {}



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$SintacticoUFE$actions {




  private final SintacticoUFE parser;

  /** Constructor */
  CUP$SintacticoUFE$actions(SintacticoUFE parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$SintacticoUFE$do_action_part00000000(
    int                        CUP$SintacticoUFE$act_num,
    java_cup.runtime.lr_parser CUP$SintacticoUFE$parser,
    java.util.Stack            CUP$SintacticoUFE$stack,
    int                        CUP$SintacticoUFE$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$SintacticoUFE$result;

      /* select the action based on the action number */
      switch (CUP$SintacticoUFE$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-1)).right;
		Panel start_val = (Panel)((java_cup.runtime.Symbol) CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-1)).value;
		RESULT = start_val;
              CUP$SintacticoUFE$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$SintacticoUFE$parser.done_parsing();
          return CUP$SintacticoUFE$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= tReturn PANEL tParC tPuntoComa 
            {
              Panel RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-2)).right;
		Panel a = (Panel)((java_cup.runtime.Symbol) CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-2)).value;
		 parser.resultado = a; 
              CUP$SintacticoUFE$result = parser.getSymbolFactory().newSymbol("INICIO",18, ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.peek()), RESULT);
            }
          return CUP$SintacticoUFE$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // PANEL ::= tMenorQ tPanel tHeigth tIgual tNumero tWidth tIgual tNumero tColor tIgual tCadena tMayorQ LISTAPANEL tMenorQ tDiagonal tPanel tMayorQ 
            {
              Panel RESULT =null;
		int hleft = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-12)).left;
		int hright = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-12)).right;
		String h = (String)((java_cup.runtime.Symbol) CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-12)).value;
		int wleft = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-9)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-9)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-9)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-6)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-6)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-6)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-4)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-4)).right;
		LinkedList<Panel> l = (LinkedList<Panel>)((java_cup.runtime.Symbol) CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-4)).value;
		 RESULT = new Panel(l, Integer.parseInt(h), Integer.parseInt(w), c); 
              CUP$SintacticoUFE$result = parser.getSymbolFactory().newSymbol("PANEL",17, ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-16)), ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.peek()), RESULT);
            }
          return CUP$SintacticoUFE$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // PANEL ::= tMenorQ tPanel tHeigth tIgual tNumero tWidth tIgual tNumero tColor tIgual tCadena tMayorQ tMenorQ tDiagonal tPanel tMayorQ 
            {
              Panel RESULT =null;
		int hleft = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-11)).left;
		int hright = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-11)).right;
		String h = (String)((java_cup.runtime.Symbol) CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-11)).value;
		int wleft = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-8)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-8)).right;
		String w = (String)((java_cup.runtime.Symbol) CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-8)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-5)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-5)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-5)).value;
		 RESULT = new Panel(new LinkedList<>(), Integer.parseInt(h), Integer.parseInt(w), c); 
              CUP$SintacticoUFE$result = parser.getSymbolFactory().newSymbol("PANEL",17, ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-15)), ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.peek()), RESULT);
            }
          return CUP$SintacticoUFE$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // LISTAPANEL ::= LISTAPANEL PANEL 
            {
              LinkedList<Panel> RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-1)).right;
		LinkedList<Panel> a = (LinkedList<Panel>)((java_cup.runtime.Symbol) CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.peek()).right;
		Panel b = (Panel)((java_cup.runtime.Symbol) CUP$SintacticoUFE$stack.peek()).value;
		 RESULT = a; RESULT.add(b); 
              CUP$SintacticoUFE$result = parser.getSymbolFactory().newSymbol("LISTAPANEL",19, ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.elementAt(CUP$SintacticoUFE$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.peek()), RESULT);
            }
          return CUP$SintacticoUFE$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // LISTAPANEL ::= PANEL 
            {
              LinkedList<Panel> RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.peek()).right;
		Panel a = (Panel)((java_cup.runtime.Symbol) CUP$SintacticoUFE$stack.peek()).value;
		 RESULT = new LinkedList<>(); RESULT.add(a); 
              CUP$SintacticoUFE$result = parser.getSymbolFactory().newSymbol("LISTAPANEL",19, ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoUFE$stack.peek()), RESULT);
            }
          return CUP$SintacticoUFE$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$SintacticoUFE$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$SintacticoUFE$do_action(
    int                        CUP$SintacticoUFE$act_num,
    java_cup.runtime.lr_parser CUP$SintacticoUFE$parser,
    java.util.Stack            CUP$SintacticoUFE$stack,
    int                        CUP$SintacticoUFE$top)
    throws java.lang.Exception
    {
              return CUP$SintacticoUFE$do_action_part00000000(
                               CUP$SintacticoUFE$act_num,
                               CUP$SintacticoUFE$parser,
                               CUP$SintacticoUFE$stack,
                               CUP$SintacticoUFE$top);
    }
}

}
